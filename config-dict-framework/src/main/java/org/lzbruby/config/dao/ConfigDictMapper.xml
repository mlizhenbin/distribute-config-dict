<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.lzbruby.config.dao.ConfigDictMapper">
    <resultMap type="org.lzbruby.config.dao.model.ConfigDict" id="configDict_result">
        <result property="id" column="id"/>
        <result property="configType" column="config_type"/>
        <result property="key" column="key"/>
        <result property="value" column="value"/>
        <result property="configDesc" column="config_desc"/>
        <result property="validFlag" column="valid_flag"/>
        <result property="orderId" column="order_id"/>
    </resultMap>

    <sql id="ConfigDict_Query_List_Sharing">
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="id!=null and ''!=id">
                AND lr_config_dict.id = #{id}
            </if>
            <if test="filterId!=null and ''!=filterId">
                AND lr_config_dict.id != #{filterId}
            </if>
            <if test="configType!=null and ''!=configType">
                AND lr_config_dict.config_type = #{configType}
            </if>
            <if test="configTypeLike!=null and ''!=configTypeLike">
                AND lr_config_dict.config_type LIKE concat('%',#{configTypeLike},'%')
            </if>
            <if test="configTypes!=null and ''!=configTypes">
                AND lr_config_dict.config_type IN
                <foreach collection="configTypes" item="configType" open="(" close=")" separator=",">
                    #{configType}
                </foreach>
            </if>
            <if test="key!=null and ''!=key">
                AND lr_config_dict.key = #{key}
            </if>
            <if test="keyLike!=null and ''!=keyLike">
                AND lr_config_dict.key LIKE concat('%',#{keyLike},'%')
            </if>
            <if test="keys!=null and ''!=keys">
                AND lr_config_dict.key IN
                <foreach collection="keys" item="key" open="(" close=")" separator=",">
                    #{key}
                </foreach>
            </if>
            <if test="value!=null and ''!=value">
                AND lr_config_dict.value = #{value}
            </if>
            <if test="value!=valueLike and ''!=valueLike">
                AND lr_config_dict.value LIKE concat('%',#{valueLike},'%')
            </if>
            <if test="configDesc!=null and ''!=configDesc">
                AND lr_config_dict.config_desc = #{configDesc}
            </if>
            <if test="validFlag!=null and ''!=validFlag">
                AND lr_config_dict.valid_flag = #{validFlag}
            </if>
            <if test="orderId!=null">
                AND lr_config_dict.order_id = #{orderId}
            </if>
        </trim>
    </sql>

    <sql id="ConfigDict_By_id">
        WHERE lr_config_dict.id = #{id}
    </sql>

    <sql id="ConfigDict_List_Paramter">
        <if test="orderItem != null">
            ORDER BY ${orderItem} ${orderType} <!-- # and $ has difference, this place need $ -->
        </if>
    </sql>

    <sql id="ConfigDict_column">
        lr_config_dict.id,
        lr_config_dict.config_type,
        lr_config_dict.key,
        lr_config_dict.value,
        lr_config_dict.config_desc,
        lr_config_dict.valid_flag,
        lr_config_dict.order_id
    </sql>

    <insert id="addConfigDict" parameterType="org.lzbruby.config.dao.model.ConfigDict" keyProperty="id">
        INSERT INTO lr_config_dict
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="configType!=null and ''!=configType">
                config_type,
            </if>
            <if test="key!=null and ''!=key">
                `key`,
            </if>
            <if test="value!=null and ''!=value">
                `value`,
            </if>
            <if test="configDesc!=null and ''!=configDesc">
                config_desc,
            </if>
            <if test="validFlag!=null and ''!=validFlag">
                valid_flag,
            </if>
            <if test="orderId!=null">
                order_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="configType!=null and ''!=configType">
                #{configType},
            </if>
            <if test="key!=null and ''!=key">
                #{key},
            </if>
            <if test="value!=null and ''!=value">
                #{value},
            </if>
            <if test="configDesc!=null and ''!=configDesc">
                #{configDesc},
            </if>
            <if test="validFlag!=null and ''!=validFlag">
                #{validFlag},
            </if>
            <if test="orderId!=null">
                #{orderId},
            </if>
        </trim>
    </insert>

    <update id="updateConfigDict" parameterType="org.lzbruby.config.dao.model.ConfigDict">
        UPDATE lr_config_dict lr_config_dict
        <trim prefix="SET" suffixOverrides=",">
            <if test="configType!=null and ''!=configType">
                lr_config_dict.config_type = #{configType},
            </if>
            <if test="key!=null and ''!=key">
                lr_config_dict.key = #{key},
            </if>
            <if test="value!=null and ''!=value">
                lr_config_dict.value = #{value},
            </if>
            <if test="configDesc!=null and ''!=configDesc">
                lr_config_dict.config_desc = #{configDesc},
            </if>
            <if test="validFlag!=null and ''!=validFlag">
                lr_config_dict.valid_flag = #{validFlag},
            </if>
            <if test="orderId!=null">
                lr_config_dict.order_id = #{orderId},
            </if>
        </trim>
        <include refid="ConfigDict_By_id"/>
    </update>

    <select id="findConfigDict" resultMap="configDict_result" parameterType="java.util.HashMap">
        SELECT
        <include refid="ConfigDict_column"/>
        FROM lr_config_dict lr_config_dict
        <include refid="ConfigDict_Query_List_Sharing"/>
    </select>

    <select id="findById" resultMap="configDict_result" parameterType="Long">
        SELECT
        <include refid="ConfigDict_column"/>
        FROM lr_config_dict lr_config_dict
        <include refid="ConfigDict_By_id"/>
    </select>

    <select id="listConfigDict" resultMap="configDict_result" parameterType="java.util.HashMap">
        SELECT
        <include refid="ConfigDict_column"/>
        FROM lr_config_dict lr_config_dict
        <include refid="ConfigDict_Query_List_Sharing"/>
        <include refid="ConfigDict_List_Paramter"/>
        <if test="begin != null and pageSize != null">
            limit #{begin},#{pageSize}
        </if>
    </select>

    <select id="listConfigDictCount" resultType="java.lang.Integer" parameterType="java.util.HashMap">
        SELECT
        COUNT(*)
        FROM lr_config_dict lr_config_dict
        <include refid="ConfigDict_Query_List_Sharing"/>
    </select>

    <delete id="deleteConfigDict" parameterType="ConfigDict">
        DELETE FROM lr_config_dict
        <include refid="ConfigDict_By_id"/>
    </delete>

</mapper>